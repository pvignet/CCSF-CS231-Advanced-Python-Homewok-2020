#!/usr/local/bin/python3
# -*- coding: UTF-8 -*-
# Decorate print() such that (A) it refuses to print anything under ten characters long and
# (B) only five calls are allowed, and demonstrate these restrictions when the program is run
import functools
import sys

def deco(max_calls,min_chars):  # max_calls is maximun number of calls allowed ,min_chars is number of character that print refuse to print
    def decorator_count(func):
        @functools.wraps(func)
        def wrapper_count(*args, **kwargs):
            wrapper_count.num_calls += 1  # count the calls
            if wrapper_count.num_calls > max_calls:  # if count reach max_calls exit
                print("Max calls reached , bye!")
                exit(0)
            else:
                result = func(*args, **kwargs)  # take the result
                if (len(result)) <= min_chars:  # measure its lenght against min_chars
                    print('less than 10 characters are not printed')
                    return ''  # if under  treshold result is ''
                else:
                    return func(*args, **kwargs)  # o
                # otherwise continue
                return func(*args, **kwargs)

        wrapper_count.num_calls = 0
        return wrapper_count

    return decorator_count


# Testing them
#with a very simple function printit
#that at the chained profiles
@deco(max_calls=5,min_chars=10)
def printit(txt):
    return(txt)

#FROM THE PROMPT PROVIDE A FILE FOR TESTING
# the file  should have : some lines less than 10 characters long & more than  5 lines
#for example file test.txt
'''
12345678
123456789
1234567890
12345678901
123456789012
1234567890123
12345678901234
'''
#so command line will be python3 deco3.py test.txt
#catch the name of file to wrap and create a generator

global g
try:
    log ="".join(sys.argv[1]) #get  file for testing from prompt
    gen = (line for line in open(log))
    g = gen

except :
    print("Error occured: no file provided at prompt, please provide a file at prompt for argv[1]")
    print(' WARNING:cmd line should be: python3 deco3.py test.txt ')

try:
    while True:
        print(printit(next(g)))

except StopIteration:  # if stopiteration do not mention it go to finally
    pass

